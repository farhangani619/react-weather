{"version":3,"sources":["API.js","FORECASTAPI.js","state/actions/index.js","images/weather.png","App.js","reportWebVitals.js","state/reducers/weather-reducer.js","state/reducers/index.js","state/store.js","index.js"],"names":["searchTerm","API_URL","fetch","method","lat","lon","console","log","GET_WEATHER_LOADING","GET_WEATHER_SUCCESS","GET_WEATHER_ERROR","GET_FORECAST_LOADING","GET_FORECAST_SUCCESS","GET_FORECAST_ERROR","getWeatherPage","key","dispatch","type","API","then","response","json","data","getForecast","error","message","FORECASTAPI","GeoPosition","Latitude","Longitude","onSearchTermChanged","payload","App","state","useSelector","weather","useDispatch","bindActionCreators","actionCreators","onSubmit","event","preventDefault","getWeather","className","placeholder","onChange","target","value","handleChange","map","forecast","style","width","src","alt","current","temp","toFixed","main","daily","myDate","Date","dt","toLocaleDateString","max","min","rain","humidity","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","middleware","applyMiddleware","thunk","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49dac4ad.chunk.js","sourcesContent":["const key = `IjGVCZ8KRIsGtjWaxuUv6P1g1s9peB4b`;\r\n\r\nexport default {\r\n  search(searchTerm) {\r\n    let API_URL = `http://dataservice.accuweather.com/locations/v1/cities/search?apikey=${key}&q=${searchTerm}`;\r\n    return fetch(API_URL, {\r\n      method: \"GET\",\r\n    });\r\n  },\r\n};\r\n","const key = `20abe739bd42101c693fa1a0efa19cd9`;\r\n\r\nexport default {\r\n  search(lat, lon) {\r\n    console.log(lat, lon);\r\n    let API_URL = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${key}`;\r\n    return fetch(API_URL, {\r\n      method: \"GET\",\r\n    });\r\n  },\r\n};\r\n","import API from \"../../API\";\r\nimport FORECASTAPI from \"../../FORECASTAPI\";\r\n\r\nexport const GET_WEATHER_LOADING = \"REDUX_THUNK_GET_WEATHER_LOADING\";\r\nexport const GET_WEATHER_SUCCESS = \"REDUX_THUNK_GET_WEATHER_SUCCESS\";\r\nexport const GET_WEATHER_ERROR = \"REDUX_THUNK_GET_WEATHER_ERROR\";\r\nexport const GET_FORECAST_LOADING = \"REDUX_THUNK_GET_FORECAST_LOADING\";\r\nexport const GET_FORECAST_SUCCESS = \"REDUX_THUNK_GET_FORECAST_SUCCESS\";\r\nexport const GET_FORECAST_ERROR = \"REDUX_THUNK_GET_FORECAST_ERROR\";\r\n\r\nexport const getWeatherPage = (searchTerm, key) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: GET_WEATHER_LOADING });\r\n    API.search(searchTerm)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (data) => dispatch(getForecast(data)),\r\n        // dispatch({ type: GET_WEATHER_SUCCESS, data }),\r\n        (error) =>\r\n          dispatch({\r\n            type: GET_WEATHER_ERROR,\r\n            error: error.message || \"Unexpected Error!!!\",\r\n          })\r\n      );\r\n  };\r\n};\r\n\r\nexport const getForecast = (searchTerm) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: GET_FORECAST_LOADING });\r\n    FORECASTAPI.search(\r\n      searchTerm[0].GeoPosition.Latitude,\r\n      searchTerm[0].GeoPosition.Longitude\r\n    )\r\n      .then((response) => response.json())\r\n      .then(\r\n        (data) => dispatch({ type: GET_FORECAST_SUCCESS, data }),\r\n        (error) =>\r\n          dispatch({\r\n            type: GET_FORECAST_ERROR,\r\n            error: error.message || \"Unexpected Error!!!\",\r\n          })\r\n      );\r\n  };\r\n};\r\nexport const onSearchTermChanged = (searchTerm) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: \"ON_SEARCH_TERM_CHANGED\",\r\n      payload: searchTerm,\r\n    });\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/weather.e725c7b8.png\";","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators } from \"./state/index\";\nimport weather from \"./images/weather.png\";\n\nimport \"./App.css\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const state = useSelector((state) => state.weather);\n  const dispatch = useDispatch();\n  const { getWeatherPage, onSearchTermChanged } = bindActionCreators(\n    actionCreators,\n    dispatch\n  );\n\n  function getWeather(event, searchTerm) {\n    event.preventDefault();\n\n    getWeatherPage(searchTerm);\n  }\n  console.log(state);\n\n  function handleChange(event) {\n    onSearchTermChanged(event.target.value);\n  }\n  return (\n    <>\n      <form onSubmit={(event) => getWeather(event, state.searchTerm)}>\n        <div className=\"row\">\n          <div className=\"col-8 mx-auto mt-5\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Enter location\"\n              onChange={(event) => handleChange(event)}\n              aria-label=\"First name\"\n            />\n          </div>\n        </div>\n        <div className=\" mx-auto text-center \">\n          <button\n            className=\"btn btn-primary mx-auto mt-2 text-center\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </div>\n      </form>\n\n      {state.weather.map((forecast) => {\n        console.log(forecast);\n        const location = state.searchTerm;\n        return (\n          <>\n            <div className=\"container \">\n              <div\n                className=\"card mx-auto text-center mt-5 bg-light\"\n                style={{ width: \"28rem\" }}\n              >\n                <img\n                  src=\"https://image.freepik.com/free-vector/woman-with-umbrella-girl-raincoat-dog-walking-rain-city-park-vector-illustration-family-activity-bad-weather-downpour-concept_74855-13290.jpg\"\n                  className=\"card-img-top\"\n                  alt=\"...\"\n                  // https://image.freepik.com/free-vector/happy-woman-walking-rainy-day-with-umbrella-isolated-flat-vector-illustration-cartoon-female-character-being-outdoors-autumn-rain-landscape-weather-concept_74855-10087.jpg\n                />\n                <div className=\"card-body\">\n                  <h2 className=\"card-title\">\n                    {(forecast.current.temp - 273.15).toFixed(2)} C\n                  </h2>\n                </div>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">\n                    {forecast.current.weather[0].main}\n                  </h5>\n                </div>\n              </div>\n            </div>\n            <div className=\"text-center mx-auto mt-5 \">\n              <h1>Daily Forecast</h1>\n            </div>\n            <div className=\"container\">\n              <div className=\"row\">\n                {forecast.daily.map((daily) => {\n                  const myDate = new Date(daily.dt * 1000);\n                  console.log(myDate.toLocaleDateString());\n\n                  return (\n                    <>\n                      <div className=\"col-lg-3 col-md-4 col-sm-12\">\n                        <div className=\"card mx-auto text-center mt-3 mb-3 bg-light\">\n                          <img className=\"card-img-top\" src={weather} />\n\n                          <div className=\"card-body\">\n                            <h3 className=\"card-title\">\n                              {myDate.toLocaleDateString()}\n                            </h3>\n                            <h3 className=\"card-title\">\n                              {daily.weather[0].main}\n                            </h3>\n                            <h5 className=\"card-title ml-0\">\n                              <span>\n                                {(daily.temp.max - 273.15).toFixed(2)} C\n                              </span>\n                              <span>\n                                {\" \"}\n                                {(daily.temp.min - 273.15).toFixed(2)} C\n                              </span>\n                            </h5>\n                            <h5 className=\"card-title\">\n                              <span>Rain : </span>\n                              <span> {daily.rain}</span>\n                            </h5>\n                            <h5 className=\"card-title\">\n                              <span>Humidity : </span>\n                              <span> {daily.humidity}</span>\n                            </h5>\n                          </div>\n                        </div>\n                      </div>\n                    </>\n                  );\n                })}\n              </div>\n            </div>\n          </>\n        );\n      })}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  GET_WEATHER_LOADING,\r\n  GET_WEATHER_SUCCESS,\r\n  GET_WEATHER_ERROR,\r\n  GET_FORECAST_LOADING,\r\n  GET_FORECAST_SUCCESS,\r\n  GET_FORECAST_ERROR,\r\n} from \"../actions/index.js\";\r\n\r\nconst initialState = {\r\n  searchTerm: \"\",\r\n  key: \"\",\r\n  weather: [],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_WEATHER_LOADING: {\r\n      return {\r\n        ...state,\r\n        weather: [],\r\n      };\r\n    }\r\n    case GET_WEATHER_ERROR: {\r\n      return {\r\n        ...state,\r\n        weather: [],\r\n      };\r\n    }\r\n    case GET_FORECAST_LOADING: {\r\n      return {\r\n        ...state,\r\n        weather: [],\r\n      };\r\n    }\r\n    case GET_FORECAST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        weather: [action.data],\r\n      };\r\n    }\r\n    case GET_FORECAST_ERROR: {\r\n      return {\r\n        ...state,\r\n        weather: [],\r\n      };\r\n    }\r\n    case \"ON_SEARCH_TERM_CHANGED\": {\r\n      return {\r\n        ...state,\r\n        searchTerm: action.payload,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport weatherReducer from \"./weather-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  weather: weatherReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nconst middleware = applyMiddleware(thunk);\r\nconst store = createStore(rootReducer, {}, middleware);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./state/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}